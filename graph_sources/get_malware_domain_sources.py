from pymongo import MongoClient
import matplotlib.pyplot as plt
import numpy as np

# This script creates a piechart of sources of malware domains

# Edit this:
MONGO_URI = 'mongodb://localhost:27017/'  # MongoDB URI (add credentials if needed)
MONGO_DB = 'drdb'                         # Database name
MONGO_COLLECTION = 'malware_2406_strict'  # Collection name

# Connect to MongoDB
client = MongoClient(MONGO_URI) # Database URI
db = client[MONGO_DB]
collection = db[MONGO_COLLECTION] # Name of the database

def get_source():
    sources = {}

    for document in collection.find():
        if document["source"] in sources:
            sources[document["source"]] += 1
        else:
            sources[document["source"]] = 1

    with open("text_files/source_types1.txt", "w") as output_file:
        for key, value in sources.items():
            output_file.write(f"{key}: {value}\n")

def remap(source):
    map = {
        "ThreatFox": "ThreatFox",
        "Spam404": "Spam404",
        "MISP": "MISP",
        "The Firebog": "The Firebog",
        "Github": "Github others",
        "URLhaus": "URLhaus",
        "Steven Black": "Steven Black",
        "Rescure": "Rescure",
    }
    return map[source]


def plot_source():
    source_types = {}

    # Read data from file
    with open('text_files/source_types1.txt', 'r') as sources:
        for source in sources:
            source_name = source.split(':')[0]
            source_number = source.split(':')[1].strip()
            source_name = remap(source_name)
            if source_name in source_types:
                source_types[source_name] += int(source_number)
            else:
                source_types[source_name] = int(source_number)

    # Getting the percentage of each threat type
    numbers = list(source_types.values())
    names = list(source_types.keys())
    percentage = [number/sum(numbers)*100 for number in numbers]

    fig, ax = plt.subplots(figsize=(11, 7), subplot_kw=dict(aspect="equal"))

    wedges, texts = ax.pie(numbers, wedgeprops=dict(width=0.5), startangle=-40)

    bbox_props = dict(boxstyle="square,pad=0.3", fc="w", ec="k", lw=0.72)
    kw = dict(arrowprops=dict(arrowstyle="-"),
            bbox=bbox_props, zorder=0, va="center")

    for i, p in enumerate(wedges):
        ang = (p.theta2 - p.theta1)/2. + p.theta1
        y = np.sin(np.deg2rad(ang))
        x = np.cos(np.deg2rad(ang))
        horizontalalignment = {-1: "right", 1: "left"}[int(np.sign(x))]
        connectionstyle = f"angle,angleA=0,angleB={ang}"
        kw["arrowprops"].update({"connectionstyle": connectionstyle})
        ax.annotate(f"{names[i]}: {numbers[i]} values, ({percentage[i]:.2f} %)", xy=(x, y), xytext=(1.1*np.sign(x), 1.2*y),
                    horizontalalignment=horizontalalignment, **kw)

    ax.set_title("Source of malware domains", fontweight='bold')

    plt.savefig('graphs/sources_piechart.png')
    plt.savefig('graphs/sources_piechart.pdf')
    plt.show()

    count = 0
    for number in numbers:
        count += number
    print(count)



# get_source()
plot_source()